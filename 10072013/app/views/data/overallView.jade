extends ../layout 

block content
    script(type='text/javascript', src='/libraries/RGraph/RGraph.common.core.js')
    script(type='text/javascript', src='/libraries/RGraph/RGraph.common.key.js')
    script(type='text/javascript', src='/libraries/RGraph/RGraph.common.effects.js')
    script(type='text/javascript', src='/libraries/RGraph/RGraph.common.tooltips.js')
    script(type='text/javascript', src='/libraries/RGraph/RGraph.common.dynamic.js')
    script(type='text/javascript', src='/libraries/RGraph/RGraph.hbar.js')
    script(type='text/javascript', src='/javascripts/excanvas.js')
    script(src='/lib/angular/angular.js')
    script(src='//www.google.com/jsapi')
    script(src='/javascripts/ng-google-chart.js')
    script(src='/js/sample.js')
    script(type='text/javascript', src='http://maps.google.com/maps/api/js?sensor=true')
    script(type='text/javascript', src='/javascripts/gmaps.js')
    script(type='text/javascript', src='http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/1.0/src/markerclusterer.js')

    script.
      var map;


      $(document).ready(function(){
        map = new GMaps({
          el: '#map',
          lat: 40.1124997,
          lng: -88.2269172,
          zoomControl : true,
          zoomControlOpt: {
            style : 'SMALL',
            position: 'TOP_LEFT'
          },
          panControl : true,
          streetViewControl : false,
          mapTypeControl: true,
          overviewMapControl: false, 
          markerClusterer: function(map) {
            return new MarkerClusterer(map);
          },
          // map control options enabled
          mapTypeControlOptions: {
            mapTypeIds : ["hybrid", "roadmap", "satellite", "terrain", "osm", "cloudmade"]
          }
        });
            $.ajax({
                url: '/JSON/allTeams',
                success: function(data, textStatus, jqXHR){
                    var res = jqXHR.responseText;
                    var parsed = $.parseJSON(res).data;

                    for(var i = 0; i< parsed.length; i++){
                      GMaps.geocode({
                        address: parsed[i].site,
                        callback: function(results, status){
                          if(status=='OK'){
                            var latlng = results[0].geometry.location;
                            map.setCenter(latlng.lat(), latlng.lng());
                            map.addMarker({
                              lat: latlng.lat(),
                              lng: latlng.lng(), 
                              infoWindow:{
                                content: 'Lat: ' + latlng.lat() + ' Lng: ' + latlng.lng()
                              }
                            });
                          //alert(latlng.lat() + " " + latlng.lng());
                          }
                        }
                      });
                  }
                  }})
                    

        map.addControl({
          position: 'top_right',
          content: 'Geolocate',
          style: {
            margin: '5px',
            padding: '1px 6px',
            border: 'solid 1px #717B87',
            background: '#fff'
          },
          events: {
            click: function(){
              GMaps.geolocate({
                success: function(position){
                  map.setCenter(position.coords.latitude, position.coords.longitude);

                },
                error: function(error){
                  alert('Geolocation failed: ' + error.message);
                },
                not_supported: function(){
                  alert("Your browser does not support geolocation");
                }
              });
            }
          }
        });

        map.addMapType("osm", {
          getTileUrl: function(coord, zoom) {
            return "http://tile.openstreetmap.org/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
          },
          tileSize: new google.maps.Size(256, 256),
          name: "OpenStreetMap",
          maxZoom: 16
        });
        map.addMapType("cloudmade", {
          getTileUrl: function(coord, zoom) {
            return "http://b.tile.cloudmade.com/8ee2a50541944fb9bcedded5165f09d9/1/256/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
          },
          tileSize: new google.maps.Size(256, 256),
          name: "CloudMade",
          maxZoom: 18
        });

        $('#geocoding_form').submit(function(e){
          e.preventDefault();
          GMaps.geocode({
            address: $('#address').val().trim(),
            callback: function(results, status){
              if(status=='OK'){
                var latlng = results[0].geometry.location;
                map.setCenter(latlng.lat(), latlng.lng());
                map.addMarker({
                  lat: latlng.lat(),
                  lng: latlng.lng(), 
                  infoWindow:{
                    content: 'Lat: ' + latlng.lat() + ' Lng: ' + latlng.lng()
                  }
                });
              //alert(latlng.lat() + " " + latlng.lng());
              }
            }
          });
        });
      });


    style.
        #map{
          display: block;
          width: 100%;
          height: 350px;
          margin: 0 auto;
          -moz-box-shadow: 0px 5px 20px #ccc;
          -webkit-box-shadow: 0px 5px 20px #ccc;
          box-shadow: 0px 5px 20px #ccc;
          margin-bottom: 20px;
        }
        #map.large{
          height:500px;
        }
        .overlay{
          display:block;
          text-align:center;
          color:#fff;
          font-size:60px;
          line-height:80px;
          opacity:0.8;
          background:#4477aa;
          border:solid 3px #336699;
          border-radius:4px;
          box-shadow:2px 2px 10px #333;
          text-shadow:1px 1px 1px #666;
          padding:0 4px;
        }
        .overlay_arrow{
          left:50%;
          margin-left:-16px;
          width:0;
          height:0;
          position:absolute;
        }
        .overlay_arrow.above{
          bottom:-15px;
          border-left:16px solid transparent;
          border-right:16px solid transparent;
          border-top:16px solid #336699;
        }
        .overlay_arrow.below{
          top:-15px;
          border-left:16px solid transparent;
          border-right:16px solid transparent;
          border-bottom:16px solid #336699;
        }

    .jumbotron.subhead(style="padding-top: 80px")
        .container
            h2 Overall Analysis
    .container(style="padding-top: 20px")
        .tabbable
          ul.nav.nav-tabs
            li.active
              a(href='#tab1', data-toggle='tab') Highlights
            li
              a(href='#tab2', data-toggle='tab') Section 2
          .tab-content
            #tab1.tab-pane.active
              #map
            #tab2.tab-pane
                .container(s, ng-controller='SampleCtrl')
                      .container-fuild
                        .row-fluid
                          .span3
                            h2 Usage
                            pre(ng-non-bindable='ng-non-bindable').
                              \n<div google-chart chart="chart" style="{{chart.cssStyle}}"/>              
                            h2 Setup
                            pre.
                              \n$scope.chart = {{chart|json}}              
                          .span8
                            h2 Live edit
                            form.form-horizontal
                              .row-fluid
                                .control-group.span6
                                  label.control-label(for='chartType') February server sale units
                                  .controls
                                    input(type='number', min='0', max='100', ng-model='chart.data.rows[1].c[3].v')
                                .control-group.span6
                                  label.control-label(for='chartType') Number of grid lines
                                  .controls
                                    input(type='number', min='0', max='100', ng-model='chart.options.vAxis.gridlines.count')
                              .row-fluid
                                .control-group.span6
                                  label.control-label(for='chartType') Chart type
                                  .controls
                                    select#chartType(ng-model='chart.type')
                                      option(value='AreaChart') AreaChart
                                      option(value='PieChart') PieChart
                                      option(value='ColumnChart') ColumnChart
                                      option(value='LineChart') LineChart
                                      option(value='Table') Table
                                      option(value='BarChart') BarChart
                                .control-group.span6
                                  label.control-label(for='chartType') Hide Server
                                  .controls
                                    input(type='checkbox', ng-model='hideServer', ng-change='selectionChange()')
                            h2 Output
                            div(google-chart='google-chart', chart='chart')